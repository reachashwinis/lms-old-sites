using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using Com.Arubanetworks.Licensing.Dataaccesslayer;
using Com.Arubanetworks.Licensing.Lib.Data;
using Com.Arubanetworks.Licensing.Lib.Utils;

public partial class Controls_DecodeCert : System.Web.UI.UserControl
{

    protected void Page_Load(object sender, EventArgs e)
    {
        if (IsPostBack)
        {
            if (RdBtnLst1.Items.FindByValue("Certificate ID").Selected == true)
            {
                lblCert.Text = "Certificate ID";
                BtnDecode.Text = "Decode Certificate";
                LblPartId.Visible = false;
            }
            else if (RdBtnLst1.Items.FindByValue("LSerialNo").Selected == true)
            {
                lblCert.Text = "Certificate ID";
                BtnDecode.Text = "Decode Certificate";
                LblPartId.Visible = false;
            }
            else
            {
                lblCert.Text = "Activation Key";
                BtnDecode.Text = "Decode Activation Key";
                LblPartId.Visible = false;
            }
            LblError.Text = string.Empty;
            LblCreator.Text = string.Empty;
            LblCreatedOn.Text = string.Empty;
            LblPartNo.Text = string.Empty;
            LblLNo.Text = string.Empty;
        }
        Lbloutput.Visible = false;
    }

    private void DecryptCertificate(string certId,string brand)
    {
        DataSet ds = new DataSet();
        Certificate objCert = new Certificate();
        KeyGenInput objKeyGenIp = new KeyGenInput();
        string strPartId = string.Empty; string strAlcPartId = string.Empty;
        objKeyGenIp.CertSerialNumber = certId;
        objKeyGenIp.Brand = brand;
        //Validation for Certificates
        string partType = objCert.getPartType(objKeyGenIp.CertPartId,Session["BRAND"].ToString());
        if (partType.Contains(ConfigurationManager.AppSettings["RFP_TYPE"].ToString()))
        {
            strPartId = objCert.DecodeMMSCertificate(objKeyGenIp);
        }
        else
        {
            if (objCert.HasPartMapEntry(objKeyGenIp) == false)
            {
                TxtBoxCertId.Text = "";
                LblError.Visible = true;
                LblError.Text = Certificate.NO_PART_MAP;
                return;
            }

            strPartId = objCert.DecodeMMSCertificate(objKeyGenIp);
            LblPartId.Visible = true;
            ds = objCert.GetPartMapEntry(certId);
            if (strPartId.ToLower().Contains("unknown"))
            {
                objKeyGenIp.Brand = ConfigurationManager.AppSettings["ALCATEL_BRAND"].ToString();
                strPartId = objCert.DecodeMMSCertificate(objKeyGenIp);
                if (strPartId.ToLower().Contains("unknown"))
                {
                    objKeyGenIp.Brand = ConfigurationManager.AppSettings["DELL_BRAND"].ToString();
                    strPartId = objCert.DecodeMMSCertificate(objKeyGenIp);
                    if (!strPartId.ToLower().Contains("unknown"))
                    {
                        LblPartId.Text = strPartId;
                    }
                    else
                    {
                        LblPartId.Text = "Unable to Decrypt this Certificate";
                        LblPartId.ForeColor = System.Drawing.Color.Red;
                    }
                }
                else
                {
                    strAlcPartId = objCert.getAlcatelPartNo(strPartId);
                    if (strAlcPartId == string.Empty)
                    {
                        LblPartId.Text = strPartId;                        
                    }
                    else
                    {
                        LblPartId.Text = strAlcPartId;
                    }
                }
            }   
            else
            {
                LblPartId.Text = strPartId;
                LblPartId.ForeColor = System.Drawing.Color.Green;
            }
            if (ds != null)
            {
                LblCreator.ForeColor = System.Drawing.Color.Green;
                LblCreatedOn.ForeColor = System.Drawing.Color.Green;
                LblCreator.Visible = true;
                LblCreatedOn.Visible = true;
                LblLNo.Visible = true;
                LblPartNo.Visible = true;
                LblCreator.Text = "Generated By: " + ds.Tables[0].Rows[0]["creator"].ToString();
                LblCreatedOn.Text = "Generated on: " + ds.Tables[0].Rows[0]["created"].ToString();
                LblPartNo.Text = "part Number: " + ds.Tables[0].Rows[0]["part_id"].ToString();
                if (RdBtnLst1.Items.FindByValue("Certificate ID").Selected == true)
                {
                    LblLNo.Text = "Serial Number: " + ds.Tables[0].Rows[0]["serial_number"].ToString();
                }
                else
                {
                    LblLNo.Text = "Certificate id: " + certId;
                }
            }
            else
            {
                LblCreator.Text = "Not generated from Site";
                LblCreatedOn.Text = "Not Generated from Site";
            }
        }
    }

    protected void Button1_Click(object sender, EventArgs e)
    {
        if (!Page.IsValid)
            return;

        Certificate objCert = new Certificate();
        KeyGenInput objKeyGenIp = new KeyGenInput();
        LblError.Text = string.Empty;
        LblCreator.Text = string.Empty;
        LblCreatedOn.Text = string.Empty;
        LblLNo.Text = string.Empty;

        

        if (RdBtnLst1.Items.FindByValue("Certificate ID").Selected == true)
        {
            Lbloutput.Visible = true;
            DecryptCertificate(TxtBoxCertId.Text.ToString(),Session["BRAND"].ToString());
        }

        else if (RdBtnLst1.Items.FindByValue("LSerialNo").Selected == true)
        {
            Lbloutput.Visible = true;
            DataSet dsPartmap = objCert.GetSerialNumberCertifcateMap(TxtBoxCertId.Text);
            if (dsPartmap == null)
            {
                LblPartId.Visible = true;
                LblPartId.Text = "No Certificate ID associated to this serial Number";
                LblPartId.ForeColor = System.Drawing.Color.Red;
                return;
            }
            string strCertid = dsPartmap.Tables[0].Rows[0]["certificate_id"].ToString();
            DecryptCertificate(strCertid, Session["BRAND"].ToString());

        }
        else
        {
            KeyGenInput objkeygenIp = new KeyGenInput();
            Lbloutput.Visible = false;
            objkeygenIp.CertSerialNumber = TxtBoxCertId.Text.ToString();
            objkeygenIp.Brand = Session["BRAND"].ToString();
            DACertificate objDACertificate = new DACertificate();
            objkeygenIp.SystemSerialNumber = objDACertificate.GetSerialNo(TxtBoxCertId.Text.ToString());
            string strPartId = objCert.DecodeActivation(objkeygenIp);
            LblPartId.Visible = true;
            if (strPartId != string.Empty)
            {
                LblPartId.ForeColor = System.Drawing.Color.Green;
                LblPartId.Text = strPartId;
            }
            else
            {
                objkeygenIp.Brand = ConfigurationManager.AppSettings["ALCATEL_BRAND"].ToString();
                strPartId = objCert.DecodeActivation(objkeygenIp);
                if (strPartId != string.Empty)
                {
                    LblPartId.ForeColor = System.Drawing.Color.Green;
                    LblPartId.Text = strPartId;
                }
                else
                {
                    LblPartId.Text = "Unable to Decrypt this Activation Key";
                    LblPartId.ForeColor = System.Drawing.Color.Red;
                }
            }
        }
    }
}
